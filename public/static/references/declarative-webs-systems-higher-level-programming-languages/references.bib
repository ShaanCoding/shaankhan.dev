@book{transaction_processing,
author = {Bernstein, Philip A. and Newcomer, Eric},
title = {Principles of Transaction Processing},
year = {2009},
isbn = {1558606238},
publisher = {Morgan Kaufmann Publishers Inc.},
address = {San Francisco, CA, USA},
edition = {2nd},
abstract = {What do reserving a seat on an airplane, buying a movie ticket over the Internet, and launching a missile all have in common? Principles of Transaction Processing for the Systems Professional explains that these and many other computerized tasks require the use of transaction processing (TP). Authors Philip Bernstein and Eric Newcomer demonstrate that this previously specialized area of systems design is becoming more important with the growth of Internet commerce. This theoretically astute and practical-minded book begins with a description of the principles of successful transaction management. (The so-called "ACID" test requires that transactions be atomistic, consistent, isolated, and durable.) The authors illustrate the principles with real-world examples of transactions in everyday life, such as ATM systems and the stock market. Bernstein and Newcomer then outline how transaction processing monitors work and discuss some of the details, such as interface definition languages, which let disparate computers communicate, and remote procedure calls. The text also explores some real-world TP monitor products, from IBM's CICS to Tuxedo to Microsoft Transaction Server. While transaction processing has been a part of mainframe system design for decades, it has recently become relevant for commerce and everyday database access on the Web. The authors look at today's Web servers--Microsoft Internet Information Server and Netscape's FastTrack Server--and show how they manage transactions. Additional chapters move back into the theoretical, with descriptions of database transactions and strategies for replicating data. The text finishes up with some predictions on where this vital and established technology is headed. This book is a must for any developer who is designing a Web site that connects users to data in a distributed environment. It's also a definitive guide to an intriguing area of computing.}
}

% Aiden Abignano, Andrew Morabito, Picard Theodore, and Qui Yang
@article{aiden_abigano,
author = {Aiden Abignano},
year = {2022},
title = {CSS2 Reflection},
journal = {UTS Computer Science Studio 2}
}

@article{andrew_morabito,
author = {Andrew Morabito},
year = {2022},
title = {CSS2 Reflection},
journal = {UTS Computer Science Studio 2}
}

@article{picard_theodore,
author = {Picard Theodore},
year = {2022},
title = {CSS2 Reflection},
journal = {UTS Computer Science Studio 2}
}

@article{qui_yang,
author = {Qui Yang},
year = {2022},
title = {CSS2 Reflection},
journal = {UTS Computer Science Studio 2}
}

@article{large_scale_data,
author = {Bernstein, Philip and Dani, Nishant and Khessib, Badriddine and Manne, Ramesh and Shutt, David},
year = {2006},
month = {01},
pages = {3-9},
title = {Data Management Issues in Supporting Large-Scale Web Services.},
volume = {29},
journal = {IEEE Data Eng. Bull.}
}

@article{uyanik2020template,
  title={A template-based code generator for web applications},
  author={Uyanik, Burak and {\c{S}}ahin, Veysel Harun},
  journal={Turkish Journal of Electrical Engineering and Computer Sciences},
  volume={28},
  number={3},
  pages={1747--1762},
  year={2020}
}

@article{terraform,
author = {Howard, Michael},
year = {2022},
month = {05},
pages = {},
title = {Terraform -- Automating Infrastructure as a Service},
doi = {10.48550/arXiv.2205.10676}
}

@inproceedings{javascriptlib,
author = {Wittern, Erik and Suter, Philippe and Rajagopalan, Shriram},
title = {A Look at the Dynamics of the JavaScript Package Ecosystem},
year = {2016},
isbn = {9781450341868},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2901739.2901743},
doi = {10.1145/2901739.2901743},
abstract = {The node package manager (npm) serves as the frontend to a large repository of JavaScript-based software packages, which foster the development of currently huge amounts of server-side Node. js and client-side JavaScript applications. In a span of 6 years since its inception, npm has grown to become one of the largest software ecosystems, hosting more than 230, 000 packages, with hundreds of millions of package installations every week. In this paper, we examine the npm ecosystem from two complementary perspectives: 1) we look at package descriptions, the dependencies among them, and download metrics, and 2) we look at the use of npm packages in publicly available applications hosted on GitHub. In both perspectives, we consider historical data, providing us with a unique view on the evolution of the ecosystem. We present analyses that provide insights into the ecosystem's growth and activity, into conflicting measures of package popularity, and into the adoption of package versions over time. These insights help understand the evolution of npm, design better package recommendation engines, and can help developers understand how their packages are being used.},
booktitle = {Proceedings of the 13th International Conference on Mining Software Repositories},
pages = {351â€“361},
numpages = {11},
keywords = {JavaScript, Node.js, software ecosystem analysis},
location = {Austin, Texas},
series = {MSR '16}
}

@Manual{prisma,
    title = {Prisma: A next generation ORM},
    author = {{Prisma}},
    year = {2022},
    note = {NPM package version 3.14.0},
    url = {https://www.npmjs.com/package/prisma},
}
  
  
@Manual{trpc,
    title = {tRPC: End-to-end typesafe APIs made easy},
    author = {{tRPC}},
    year = {2022},
    note = {NPM package version 9.24.0},
    url = {https://github.com/trpc/trpc/releases/tag/v9.24.0},
}

@article{modeldrivendev,  
author={Chowdhary, P. and Bhaskaran, K. and Caswell, N. S. and Chang, H. and Chao, T. and Chen, S.-K. and Dikun, M. and Lei, H. and Jeng, J.-J. and Kapoor, S. and Lang, C. A. and Mihaila, G. and Stanoi, I. and Zeng, L.},
journal={IBM Systems Journal},
title={Model Driven Development for Business Performance Management},
year={2006},
volume={45},
number={3},
pages={587-605},
doi={10.1147/sj.453.0587}
}

@article{dsmlangs,
author = {Luoma, Janne and Kelly, Steven and Tolvanen, Juha-Pekka},
year = {2004},
month = {01},
pages = {},
title = {Defining domain-specific modeling languages: Collected experiences},
journal = {4th Work. Domain-Specific Model.}
}

@article{declarativevimperitave,
author = {Fahland, Dirk and Lubke, Daniel and Mendling, Jan and Reijers, Hajo and Weber, Barbara and Weidlich, Matthias and Zugal, Stefan},
year = {2009},
month = {01},
pages = {353-366},
title = {Declarative versus Imperative Process Modeling Languages: The Issue of Understandability},
volume = {29},
isbn = {978-3-642-01861-9},
journal = {Lecture Notes in Business Information Processing},
}

@article{modellingbusinessreqs,
author = {Pandey, Dhirendra and Suman, Ugrasen and Ramani, A},
year = {2011},
month = {05},
pages = {},
title = {A Framework for Modelling Software Requirements},
volume = {8},
journal = {International Journal of Computer Science Issues}
}

@article{micromono,
author = {Gos, Konrad and Zabierowski, Wojciech},
year = {2020},
month = {04},
pages = {150-153},
title = {The Comparison of Microservice and Monolithic Architecture},
doi = {10.1109/MEMSTECH49584.2020.9109514}
}