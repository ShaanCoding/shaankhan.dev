using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Solution
{

  /*
   * Complete the cookies function below.
   */

  static bool check(IEnumerable<int> A, int k)
  {
    foreach(var a in A) {
      if(a < k) return false;
    }
    return true;
  }

  static int cookies(int k, List<int> A)
  {
    /*
     * Write your code here.
     */

    A.Sort();
    var L = new LinkedList<int>(A);

    int steps = 0;
    while (!check(L, k))
    {
      foreach(var node in A)
      int first = -1;
      int second = -1;
      int firstVal = -1;
      int secondVal = -1;
      for(int i = 0; i < A.Count; i++){

      }
    }
    return 0;

  }

  public static void Main(string[] args)
  {
    Console.WriteLine(1);
    TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

    string[] nk = Console.ReadLine().Split(' ');

    int n = Convert.ToInt32(nk[0]);

    int k = Convert.ToInt32(nk[1]);

    int[] A = Array.ConvertAll(Console.ReadLine().Split(' '), ATemp => Convert.ToInt32(ATemp))
    ;
    int result = cookies(k, A.ToList());

    textWriter.WriteLine(result);

    textWriter.Flush();
    textWriter.Close();
  }
}

Solution.Main(new string[0]);