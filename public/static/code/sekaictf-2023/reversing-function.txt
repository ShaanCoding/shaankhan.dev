using System;
using System.Collections;
using System.Text;
using RequestClasses;
using UnityEngine;
using UnityEngine.Networking;

// Token: 0x02000006 RID: 6
public class GachaManager : MonoBehaviour
{
	// Token: 0x06000013 RID: 19 RVA: 0x00002559 File Offset: 0x00000759
	private void Start()
	{
		this.gameState = Object.FindObjectOfType<GameState>();
	}

	// Token: 0x06000014 RID: 20 RVA: 0x00002566 File Offset: 0x00000766
	public void OnPullButtonClick(int cost, int numPulls)
	{
		if (this.gameState.crystals < cost)
		{
			return;
		}
		base.StartCoroutine(this.SendGachaRequest(numPulls));
	}

	// Token: 0x06000015 RID: 21 RVA: 0x00002585 File Offset: 0x00000785
	public IEnumerator SendGachaRequest(int numPulls)
	{
		string json = JsonUtility.ToJson(new GachaRequest(this.gameState.crystals, this.gameState.pulls, numPulls));
		using (UnityWebRequest request = this.CreateGachaWebRequest(json))
		{
			yield return request.SendWebRequest();
			if (request.result == UnityWebRequest.Result.Success)
			{
				this.HandleGachaResponse(request.downloadHandler.text, numPulls);
				GachaResponse gachaResponse = JsonUtility.FromJson<GachaResponse>(request.downloadHandler.text);
				base.StartCoroutine(this.uiManager.DisplaySplashArt(gachaResponse.characters));
			}
			else
			{
				this.uiManager.GenericModalHandler(this.uiManager.failedConnectionModal, this.uiManager.failedConnectionModalCloseButton);
				AudioController.Instance.PlaySFX("Open");
			}
		}
		UnityWebRequest request = null;
		yield break;
		yield break;
	}

	// Token: 0x06000016 RID: 22 RVA: 0x0000259C File Offset: 0x0000079C
	private UnityWebRequest CreateGachaWebRequest(string json)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(json);
		string s = "aHR0cDovLzE3Mi44Ni42NC44OTozMDAwL2dhY2hh";
		UnityWebRequest unityWebRequest = new UnityWebRequest(Encoding.UTF8.GetString(Convert.FromBase64String(s)), "POST");
		unityWebRequest.uploadHandler = new UploadHandlerRaw(bytes);
		unityWebRequest.downloadHandler = new DownloadHandlerBuffer();
		unityWebRequest.SetRequestHeader("Content-Type", "application/json");
		unityWebRequest.SetRequestHeader("User-Agent", "SekaiCTF");
		return unityWebRequest;
	}

	// Token: 0x06000017 RID: 23 RVA: 0x0000260C File Offset: 0x0000080C
	private void HandleGachaResponse(string responseText, int numPulls)
	{
		GachaResponse gachaResponse = JsonUtility.FromJson<GachaResponse>(responseText);
		this.lastGachaResponse = gachaResponse;
		this.gameState.SpendCrystals(numPulls);
		this.uiManager.UpdateUI();
		this.uiManager.splashArtCanvas.gameObject.SetActive(true);
		AudioController.Instance.FadeMusic("Pulling");
	}

	// Token: 0x04000019 RID: 25
	public UIManager uiManager;

	// Token: 0x0400001A RID: 26
	public GachaResponse lastGachaResponse;

	// Token: 0x0400001B RID: 27
	private GameState gameState;
}